<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="857bd32b-ddaa-4197-a9de-2ee7d699445a" name="Default" comment="">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/sabaki/core.clj" afterPath="$PROJECT_DIR$/src/sabaki/core.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/sabaki/encoding.clj" afterPath="$PROJECT_DIR$/src/sabaki/encoding.clj" />
    </list>
    <ignored path="sabaki.iws" />
    <ignored path=".idea/workspace.xml" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="sabaki" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-704">
              <caret line="68" column="8" selection-start-line="68" selection-start-column="8" selection-end-line="68" selection-end-column="8" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-2106">
              <caret line="6526" column="6" selection-start-line="6526" selection-start-column="6" selection-end-line="6526" selection-end-column="6" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="test.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="135">
              <caret line="93" column="38" selection-start-line="88" selection-start-column="19" selection-end-line="93" selection-end-column="38" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="ops.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-302">
              <caret line="9" column="17" selection-start-line="9" selection-start-column="17" selection-end-line="9" selection-end-column="17" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="encoding.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="510">
              <caret line="68" column="6" selection-start-line="68" selection-start-column="6" selection-end-line="68" selection-end-column="6" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/test/sabaki/core_test.clj" />
        <option value="$PROJECT_DIR$/single-cipher" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/repeating-key" />
        <option value="$PROJECT_DIR$/repeating-key-test" />
        <option value="$PROJECT_DIR$/base64-test" />
        <option value="$PROJECT_DIR$/super-test" />
        <option value="$PROJECT_DIR$/ecb-encripted" />
        <option value="$PROJECT_DIR$/src/sabaki/ops.clj" />
        <option value="$PROJECT_DIR$/test/sabaki/test.clj" />
        <option value="$PROJECT_DIR$/src/sabaki/encoding.clj" />
        <option value="$PROJECT_DIR$/src/sabaki/core.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="110" />
    <option name="y" value="22" />
    <option name="width" value="1281" />
    <option name="height" value="794" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Clojure</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="test" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="target" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
          <PATH>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="src" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
            <PATH_ELEMENT>
              <option name="myItemId" value="sabaki" />
              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$USER_HOME$/coydog/coydog/coydog" />
    <property name="cursive.last.file.extension./Users/fanweiwei/\u5bc6\u7801\u5b66/sabaki/sabaki/src" value="clj" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$2/Languages" value="Clojure" />
    <property name="settings.editor.selected.configurable" value="Clojure.IDE" />
    <property name="settings.editor.splitter.proportion" value="0.2" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
  </component>
  <component name="ReplState" timestamp="1482949650597">{:repl-history {:ide [], :local [&quot;(defn -main \&quot;高级加密标准\&quot; [&amp; args]\n\n  (let [cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n        key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                    (partition 8)\n                    (hexstring-to-bytes))\n\n        next   (-&gt;&gt; key\n                    (last)\n                    (rot-word)\n                    (map s-box)\n                    (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n        ]\n\n\n\n    (comment\n      (-&gt;&gt; cipher-hexb\n           (partition 8)\n           (map hexstring-to-bytes)\n           (map #(map bit-xor temp %))\n           (map word-to-hex)\n           )\n      )\n\n\n    (println (map word-to-hex key))\n\n\n    )&quot; &quot;(let [cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ]\n\n\n\n  (comment\n    (-&gt;&gt; cipher-hexb\n         (partition 8)\n         (map hexstring-to-bytes)\n         (map #(map bit-xor temp %))\n         (map word-to-hex)\n         )\n    )\n\n\n  (println (map word-to-hex key))\n\n\n  )&quot; &quot;(let [cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ]\n\n\n\n  (comment\n    (-&gt;&gt; cipher-hexb\n         (partition 8)\n         (map hexstring-to-bytes)\n         (map #(map bit-xor temp %))\n         (map word-to-hex)\n         )\n    )\n\n\n  (println (map word-to-hex key))\n\n\n  )&quot; &quot;(let [cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(map bit-xor next %)))\n\n      ]\n\n  key2\n  ;(println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ;key2 (-&gt;&gt; key\n      ;          (map #(map bit-xor next %)))\n\n      ]\n\n  next\n  ;(println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (map rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ;key2 (-&gt;&gt; key\n      ;          (map #(map bit-xor next %)))\n\n      ]\n\n  next\n  ;(println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n     (partition 8)\n     (map hexstring-to-bytes))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (map rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ;key2 (-&gt;&gt; key\n      ;          (map #(map bit-xor next %)))\n\n      ])&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (map rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      ;key2 (-&gt;&gt; key\n      ;          (map #(map bit-xor next %)))\n\n      ] next)&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(map bit-xor next %)))\n\n      ]\n\n  next\n  ;(println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(map bit-xor next %)))\n\n      ]\n\n  key2\n  ;(println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (println (map word-to-hex (concat key key2)))\n\n\n  )&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (drop 3)\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (map word-to-hex (concat key key2)\n\n\n       ))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (first)\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (map word-to-hex (concat key key2)\n\n\n       ))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (first)\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (map word-to-hex (cons key key2)\n\n\n       ))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (first)\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (map word-to-hex (conj key key2)\n\n\n       ))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (first)\n                (list)\n                (map #(map bit-xor next %)))\n\n      ]\n\n  (map word-to-hex (conj key key2)\n\n\n       ))&quot; &quot;(let [;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map bit-xor first next))\n\n      ]\n\n  (map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map bit-xor first next))\n\n      ]\n\n  (map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map bit-xor first next))\n\n      ]\n\n  (println key)\n  (println key2)\n  ;(map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(bit-xor next %))\n\n      ]\n\n  (println key)\n  (println key2)\n  ;(map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      key2 (-&gt;&gt; key\n                (map #(bit-xor next %)))\n\n      ]\n\n  (println key)\n  (println key2)\n  ;(map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n\n      ]\n\n  (println (map word-to-hex key))\n  (println (word-to-hex next))\n\n  ;(map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;(def key '('(43 126 21 22) '(40 174 210 166) '(171 247 21 136) '(9 207 79 60))\n            )&quot; &quot;(def key '('(43 126 21 22) '(40 174 210 166) '(171 247 21 136) '(9 207 79 60)))&quot; &quot;(def next '(139 132 235 1))&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n\n      ]\n\n\n  (println key)\n  (println next)\n\n  ;(map word-to-hex (conj key key2))\n\n\n  )&quot; &quot;key&quot; &quot;(def key (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n              (partition 8)\n              (map hexstring-to-bytes)))&quot; &quot;(def next (-&gt;&gt; key\n                      (last)\n                      (rot-word)\n                      (map s-box)\n                      (map bit-xor '(0x01 0x00 0x00 0x00))))&quot; &quot;(reduce + key)&quot; &quot;(reduce (fn [first second] (map bit-xor first second)) next key)&quot; &quot;(reduce (fn [acc word] (conj acc (map bit-xor next word))) [] key)&quot; &quot;(map word-to-hex (reduce (fn [acc word] (conj acc (map bit-xor next word))) [] key))&quot; &quot;(map word-to-hex \n\n\n    (reduce\n       (fn [temp acc]\n         (conj acc (map bit-xor next word)))\n         \n        \n         \n        next key)\n\n\n\n)&quot; &quot;(map word-to-hex \n\n\n    (reduce\n       (fn [acc word]\n         (conj acc (map bit-xor (last acc) second)))\n         '((map bit-xor next (first key))) key)\n\n\n\n)&quot; &quot;(map word-to-hex \n\n\n    (reduce\n       (fn [acc word]\n         (conj acc (map bit-xor (last acc) second)))\n         [(bit-xor next (first key))] key)\n\n\n\n)&quot; &quot;(map word-to-hex \n\n\n    (reduce\n       (fn [acc word]\n         (conj acc (map bit-xor (last acc) second)))\n         [(map bit-xor next (first key))] key)\n\n\n\n)&quot; &quot;(map word-to-hex \n\n\n    (reduce\n       (fn [acc word]\n         ;(conj acc (map bit-xor (last acc) second))\n         \n         )\n         [(map bit-xor next (first key))] key)\n\n\n\n)&quot; &quot;(map word-to-hex\n\n\n     (reduce\n       (fn [acc word]\n         (conj acc (map bit-xor (last acc) second))\n\n         )\n       [(map bit-xor next (first key))] key)\n\n\n\n     )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n\n      ]\n\n  (map word-to-hex\n\n\n       (reduce\n         (fn [acc word]\n           (conj acc (map bit-xor (last acc) second))\n\n           )\n         [(map bit-xor next (first key))] key)\n\n\n\n       )\n\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n\n      ]\n\n  (map word-to-hex\n\n\n       (reduce\n         (fn [acc word]\n           (conj acc (map bit-xor (last acc) word))\n\n           )\n         [(map bit-xor next (first key))] key)\n\n\n\n       )\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n\n      ]\n\n  (map word-to-hex\n\n\n       (reduce\n         (fn [acc word]\n           (conj acc (map bit-xor (last acc) word))\n\n           )\n         [(map bit-xor next (first key))] (drop 1 key))\n\n\n\n       )\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor '(0x01 0x00 0x00 0x00)))\n\n      keys2  (reduce\n               (fn [acc word]\n                 (conj acc (map bit-xor (last acc) word))\n\n                 )\n               [(map bit-xor next (first key))] (drop 1 key))\n\n      ]\n\n  (map word-to-hex keys2)\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor [0x01 0x00 0x00 0x00]))\n\n      keys2  (reduce\n               (fn [acc word]\n                 (conj acc (map bit-xor (last acc) word))\n\n                 )\n               [(map bit-xor next (first key))] (drop 1 key))\n\n      ]\n\n  (map word-to-hex (concat keys2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n      next   (-&gt;&gt; key\n                  (last)\n                  (rot-word)\n                  (map s-box)\n                  (map bit-xor [0x01 0x00 0x00 0x00]))\n\n      keys2  (reduce\n               (fn [acc word]\n                 (conj acc (map bit-xor (last acc) word))\n\n                 )\n               [(map bit-xor next (first key))] (drop 1 key))\n\n      ]\n\n  (map word-to-hex (concat key keys2))\n\n\n  )&quot; &quot;(defn -main \&quot;高级加密标准\&quot; [&amp; args]\n  ;cipher-hex  \&quot;69c4e0d86a7b0430d8cdb78070b4c55a\&quot;\n  ;(def key '('(43 126 21 22) '(40 174 210 166) '(171 247 21 136) '(9 207 79 60)))\n  ;(def next '(139 132 235 1))\n\n  (let [\n        key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                    (partition 8)\n                    (map hexstring-to-bytes))\n\n\n        keys2  (expand-key key)\n\n        ]\n\n    (map word-to-hex (concat keys2))\n\n\n    )\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key)\n\n      ]\n\n  (map word-to-hex (concat keys2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key)\n\n      ]\n\n  (map word-to-hex (concat key keys2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key)\n\n      ]\n\n  (map word-to-hex (concat key keys2 (expand-key keys2)))\n\n\n  )&quot; &quot;(defn expand-key [key rcon]\n  (let  [next   (-&gt;&gt; key\n                     (last)\n                     (rot-word)\n                     (map s-box)\n                     (map bit-xor [0x01 0x00 0x00 0x00]))]\n\n    ;;\n    (reduce\n      (fn [acc word]\n        (conj acc (map bit-xor (last acc) word))\n\n        )\n      [(map bit-xor next (first key))] (drop 1 key))\n\n    )\n  )\n&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key keys2))\n\n\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key keys2 (expand-key (get rcon 1))))\n\n\n  )&quot; &quot;(defn expand-key [key rcon]\n  (let  [next   (-&gt;&gt; key\n                     (last)\n                     (rot-word)\n                     (map s-box)\n                     (map bit-xor [0x01 0x00 0x00 0x00]))]\n    (println (map word-to-hex next))\n    ;;\n    (reduce\n      (fn [acc word]\n        (conj acc (map bit-xor (last acc) word))\n\n        )\n      [(map bit-xor next (first key))] (drop 1 key))\n\n    )\n  )&quot; &quot;(defn expand-key [key rcon]\n  (let  [next   (-&gt;&gt; key\n                     (last)\n                     (rot-word)\n                     (map s-box)\n                     (map bit-xor [0x01 0x00 0x00 0x00]))]\n    (println (word-to-hex next))\n    ;;\n    (reduce\n      (fn [acc word]\n        (conj acc (map bit-xor (last acc) word))\n\n        )\n      [(map bit-xor next (first key))] (drop 1 key))\n\n    )\n  )&quot; &quot;(let [\n      key    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                  (partition 8)\n                  (map hexstring-to-bytes))\n\n\n      keys2  (expand-key key (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key keys2 (expand-key keys2 (get rcon 1))))\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      keys1  (expand-key key (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key0 keys1 (expand-key keys1 (get rcon 1))))\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      keys1  (expand-key key1 (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key0 keys1 (expand-key keys1 (get rcon 1))))\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      key1  (expand-key key1 (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key0 key1 (expand-key key1 (get rcon 1))))\n\n\n  )&quot; &quot;(defn expand-key [key rcon]\n  (let  [next   (-&gt;&gt; key\n                     (last)\n                     (rot-word)\n                     (map s-box)\n                     (map bit-xor rcon))]\n    (println (word-to-hex next))\n    ;;\n    (reduce\n      (fn [acc word]\n        (conj acc (map bit-xor (last acc) word))\n\n        )\n      [(map bit-xor next (first key))] (drop 1 key))\n\n    )\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      key1  (expand-key key0 (get rcon 0))\n\n      ]\n\n  (map word-to-hex (concat key0 key1 (expand-key key1 (get rcon 1))))\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (map word-to-hex schedule)\n\n\n  )&quot; &quot;\n(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      schedule  (cat (reduce\n                       (fn [acc r]\n                         (conj acc (expand-key (last acc) r))\n\n                         )\n                       [key0] rcon))\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      schedule  (cat (reduce\n                       (fn [acc r]\n                         (conj acc (expand-key (last acc) r))\n\n                         )\n                       [key0] rcon))\n\n      ]\n\n\n  (println schedule)\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (array))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n             (partition 8)\n             (map hexstring-to-bytes)\n             (to-array))&quot; &quot;(do (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n             (partition 8)\n             (map hexstring-to-bytes)\n             (to-array)))&quot; &quot;(-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n             (partition 8)\n             (map hexstring-to-bytes)\n             )&quot; &quot;(reduce\n  (fn [acc r]\n    (conj acc (expand-key (last acc) r))\n\n    )\n  '(key0) rcon)&quot; &quot;(reduce\n  (fn [acc r]\n    (conj acc (expand-key (last acc) r))\n\n    )\n  [key0] rcon)&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (vector))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into [])\n\n\n                   schedule  (reduce\n                               (fn [acc r]\n                                 (conj acc (expand-key (last acc) r))\n\n                                 )\n                               [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  schedule\n\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (flatten schedule)\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (map concat schedule)\n  )&quot; &quot;(map vector schedule)&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (map vector schedule)\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (apply concat schedule)\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      schedule  (reduce\n                  (fn [acc r]\n                    (conj acc (expand-key (last acc) r))\n\n                    )\n                  [key0] rcon)\n\n      ]\n\n\n  (mapcat identity schedule)\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;2b7e151628aed2a6abf7158809cf4f3c\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  key-schedule\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;0000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  key-schedule\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;0000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map word-to-hex key-schedule)\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map word-to-hex key-schedule)\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map word-to-hex (apply str (partition 4 key-schedule)))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map word-to-hex (str (partition 4 key-schedule)))\n\n  )&quot; &quot;(str (partition 4 (map word-to-hex key-schedule)))&quot; &quot;(map word-to-hex key-schedule)&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (str (partition 4 (map word-to-hex key-schedule)))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (str (map word-to-hex key-schedule))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map word-to-hex key-schedule)\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (partition 4 (map word-to-hex key-schedule))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map str (partition 4 (map word-to-hex key-schedule)))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (do (map str (partition 4 (map word-to-hex key-schedule))))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (doall (map str (partition 4 (map word-to-hex key-schedule))))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (doall str (partition 4 (map word-to-hex key-schedule)))\n\n  )&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (println (map str (partition 4 (map word-to-hex key-schedule)))))\n\n)&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map str (partition 4 (map word-to-hex key-schedule))))\n\n)&quot; &quot;(let [\n      key0    (-&gt;&gt; \&quot;000102030405060708090a0b0c0d0e0f\&quot;\n                   (partition 8)\n                   (map hexstring-to-bytes)\n                   (into []))\n\n\n      key-schedule  (mapcat identity\n                            (reduce\n                              (fn [acc r]\n                                (conj acc (expand-key (last acc) r))\n\n                                )\n                              [key0] rcon))\n\n      ]\n\n  (map #(apply str %) (partition 4 (map word-to-hex key-schedule))))\n\n)&quot;], :remote []}}</component>
  <component name="RunManager" selected="Clojure REPL.Repplsauce">
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <method />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="HTML_USED" value="false" />
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
      <method />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <method />
    </configuration>
    <configuration default="true" type="ClojureScriptRunConfiguration" factoryName="Clojure Script">
      <module name="" />
      <setting name="path" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="" />
      <setting name="repl" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="JUnitTestDiscovery" factoryName="JUnit Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="JarApplication" factoryName="JAR Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="Java Scratch" factoryName="Java Scratch">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="SCRATCH_FILE_ID" value="0" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <LeiningenRunnerParameters>
        <option name="myGoals">
          <list />
        </option>
        <option name="myWorkingDirectory" value="" />
        <option name="profiles" value="" />
        <option name="trampoline" value="false" />
      </LeiningenRunnerParameters>
      <method />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="true" type="TestNGTestDiscovery" factoryName="TestNG Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="false" name="Repplsauce" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="sabaki" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method />
    </configuration>
    <configuration default="false" name="main" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <LeiningenRunnerParameters>
        <option name="myGoals">
          <list>
            <option value="run" />
          </list>
        </option>
        <option name="myWorkingDirectory" value="$PROJECT_DIR$" />
        <option name="profiles" value="" />
        <option name="trampoline" value="false" />
      </LeiningenRunnerParameters>
      <method />
    </configuration>
    <list size="2">
      <item index="0" class="java.lang.String" itemvalue="Clojure REPL.Repplsauce" />
      <item index="1" class="java.lang.String" itemvalue="Leiningen.main" />
    </list>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="857bd32b-ddaa-4197-a9de-2ee7d699445a" name="Default" comment="" />
      <created>1481914591918</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1481914591918</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="110" y="22" width="1281" height="794" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32905984" sideWeight="0.5" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.3809524" sideWeight="0.45501474" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.5681818" sideWeight="0.29056048" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.27492878" sideWeight="0.54498523" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.19612591" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.5738636" sideWeight="0.22713864" order="2" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32954547" sideWeight="0.5" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.46539026" sideWeight="0.45501474" order="8" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.5681818" sideWeight="0.29056048" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" show_stripe_button="true" weight="0.45014244" sideWeight="0.54498523" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24815905" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.5738636" sideWeight="0.22713864" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="true" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1275">
          <caret line="85" column="0" selection-start-line="85" selection-start-column="0" selection-end-line="88" selection-end-column="1" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base64-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="37" selection-start-line="0" selection-start-column="37" selection-end-line="0" selection-end-column="37" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1440">
          <caret line="96" column="14" selection-start-line="96" selection-start-column="14" selection-end-line="96" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="1" column="31" selection-start-line="1" selection-start-column="31" selection-end-line="1" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="360">
          <caret line="24" column="24" selection-start-line="24" selection-start-column="24" selection-end-line="24" selection-end-column="24" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base64-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="37" selection-start-line="0" selection-start-column="37" selection-end-line="0" selection-end-column="37" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1440">
          <caret line="96" column="14" selection-start-line="96" selection-start-column="14" selection-end-line="96" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="1" column="31" selection-start-line="1" selection-start-column="31" selection-end-line="1" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="795">
          <caret line="53" column="27" selection-start-line="53" selection-start-column="27" selection-end-line="53" selection-end-column="27" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base64-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="37" selection-start-line="0" selection-start-column="37" selection-end-line="0" selection-end-column="37" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1440">
          <caret line="96" column="14" selection-start-line="96" selection-start-column="14" selection-end-line="96" selection-end-column="14" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="1" column="31" selection-start-line="1" selection-start-column="31" selection-end-line="1" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="20" selection-start-line="25" selection-start-column="20" selection-end-line="25" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="56" column="30" selection-start-line="56" selection-start-column="30" selection-end-line="56" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="20" selection-start-line="25" selection-start-column="20" selection-end-line="25" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="56" column="30" selection-start-line="56" selection-start-column="30" selection-end-line="56" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="20" selection-start-line="25" selection-start-column="20" selection-end-line="25" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="56" column="30" selection-start-line="56" selection-start-column="30" selection-end-line="56" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="375">
          <caret line="25" column="20" selection-start-line="25" selection-start-column="20" selection-end-line="25" selection-end-column="20" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="56" column="30" selection-start-line="56" selection-start-column="30" selection-end-line="56" selection-end-column="30" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="23" column="60" selection-start-line="23" selection-start-column="11" selection-end-line="23" selection-end-column="60" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="12810">
          <caret line="854" column="6" selection-start-line="854" selection-start-column="6" selection-end-line="854" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="975">
          <caret line="65" column="13" selection-start-line="65" selection-start-column="13" selection-end-line="65" selection-end-column="13" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1410">
          <caret line="94" column="25" selection-start-line="94" selection-start-column="25" selection-end-line="94" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="21525">
          <caret line="1435" column="27" selection-start-line="1435" selection-start-column="27" selection-end-line="1435" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="390">
          <caret line="26" column="3" selection-start-line="15" selection-start-column="0" selection-end-line="26" selection-end-column="3" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/super-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1365">
          <caret line="91" column="44" selection-start-line="91" selection-start-column="44" selection-end-line="91" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/base64-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="37" selection-start-line="0" selection-start-column="37" selection-end-line="0" selection-end-column="37" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/ecb-encripted">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="195">
          <caret line="13" column="57" selection-start-line="13" selection-start-column="57" selection-end-line="13" selection-end-column="57" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/repeating-key-test">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="15">
          <caret line="1" column="31" selection-start-line="1" selection-start-column="31" selection-end-line="1" selection-end-column="31" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/test/sabaki/test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="135">
          <caret line="93" column="38" selection-start-line="88" selection-start-column="19" selection-end-line="93" selection-end-column="38" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/ops.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-302">
          <caret line="9" column="17" selection-start-line="9" selection-start-column="17" selection-end-line="9" selection-end-column="17" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/encoding.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="510">
          <caret line="68" column="6" selection-start-line="68" selection-start-column="6" selection-end-line="68" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.8.0/clojure-1.8.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2106">
          <caret line="6526" column="6" selection-start-line="6526" selection-start-column="6" selection-end-line="6526" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sabaki/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-704">
          <caret line="68" column="8" selection-start-line="68" selection-start-column="8" selection-end-line="68" selection-end-column="8" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>IDE SDK</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>sabaki</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: clojure-complete:0.2.4</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>